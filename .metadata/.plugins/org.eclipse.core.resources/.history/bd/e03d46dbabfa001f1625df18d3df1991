package com.example.Software.engineer.test.Controller;

import com.example.Software.engineer.test.DTO.SiswaDTO;
import com.example.Software.engineer.test.Service.SiswaService;
import jakarta.validation.Valid;
import lombok.RequiredArgsConstructor;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.*;

import java.util.List;

@RestController
@RequiredArgsConstructor
@RequestMapping("/api/siswa")
public class SiswaController {

    private final SiswaService siswaService;
    private static final Logger logger = LoggerFactory.getLogger(SiswaController.class);

    // ✅ Ambil semua siswa
    @GetMapping
    public ResponseEntity<List<SiswaDTO>> getAllSiswa() {
        logger.info("Mengambil semua data siswa");
        return ResponseEntity.ok(siswaService.getAllSiswa());
    }

    // ✅ Ambil siswa berdasarkan ID
    @GetMapping("/{id}")
    public ResponseEntity<SiswaDTO> getSiswaById(@PathVariable Long id) {
        logger.info("Mengambil data siswa dengan ID: {}", id);
        return ResponseEntity.ok(siswaService.getSiswaById(id));
    }

    // ✅ Tambah siswa baru (gunakan DTO untuk validasi)
    @PostMapping
    public ResponseEntity<SiswaDTO> createSiswa(@Valid @RequestBody SiswaDTO siswaDTO) {
        logger.info("Menambahkan siswa baru: {}", siswaDTO.getNama());
        return ResponseEntity.ok(siswaService.saveSiswa(siswaDTO));
    }

    // ✅ Update data siswa
    @PutMapping("/{id}")
    public ResponseEntity<SiswaDTO> updateSiswa(@PathVariable Long id, @Valid @RequestBody SiswaDTO siswaDTO) {
        logger.info("Mengupdate data siswa dengan ID: {}", id);
        return ResponseEntity.ok(siswaService.updateSiswa(id, siswaDTO));
    }

    // ✅ Hapus siswa berdasarkan ID
    @DeleteMapping("/{id}")
    public ResponseEntity<String> deleteSiswa(@PathVariable Long id) {
        logger.warn("Menghapus data siswa dengan ID: {}", id);
        siswaService.deleteSiswa(id);
        return ResponseEntity.ok("Siswa dengan ID " + id + " berhasil dihapus");
    }

    // ✅ Tambah mata pelajaran ke siswa
    @PostMapping("/{siswaId}/mapel/{mapelId}")
    public ResponseEntity<SiswaDTO> addMapelToSiswa(@PathVariable Long siswaId, @PathVariable Long mapelId) {
        logger.info("Menambahkan mata pelajaran ID {} ke siswa ID {}", mapelId, siswaId);
        return ResponseEntity.ok(siswaService.addMapelToSiswa(siswaId, mapelId));
    }
}
