package com.example.Software.engineer.test.Controller;

import com.example.Software.engineer.test.DTO.SiswaDTO;
import com.example.Software.engineer.test.Entity.Siswa;
import com.example.Software.engineer.test.Service.SiswaService;
import lombok.RequiredArgsConstructor;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.*;

import java.util.List;

@RestController
@RequiredArgsConstructor
@RequestMapping("/api/siswa")
public class SiswaController {

    private final SiswaService siswaService;
    private static final Logger logger = LoggerFactory.getLogger(SiswaController.class);

    // ðŸ”¹ GET semua siswa (dengan DTO)
    @GetMapping
    public ResponseEntity<List<SiswaDTO>> getAllSiswa() {
        logger.info("Mengambil semua data siswa");
        List<SiswaDTO> siswaList = siswaService.getAllSiswa();
        return ResponseEntity.ok(siswaList);
    }

    // ðŸ”¹ GET siswa by ID
    @GetMapping("/{id}")
    public ResponseEntity<SiswaDTO> getSiswaById(@PathVariable Long id) {
        logger.info("Mengambil data siswa dengan ID: {}", id);
        SiswaDTO siswa = siswaService.getSiswaById(id);
        return ResponseEntity.ok(siswa);
    }

    // ðŸ”¹ POST (Membuat siswa baru)
    @PostMapping
    public ResponseEntity<SiswaDTO> createSiswa(@RequestBody Siswa siswa) {
        logger.info("Menambahkan siswa baru: {}", siswa.getNama());
        SiswaDTO savedSiswa = siswaService.saveSiswa(siswa);
        return ResponseEntity.ok(savedSiswa);
    }

    // ðŸ”¹ PUT (Update siswa)
    @PutMapping("/{id}")
    public ResponseEntity<SiswaDTO> updateSiswa(@PathVariable Long id, @RequestBody Siswa siswa) {
        logger.info("Mengupdate data siswa dengan ID: {}", id);
        SiswaDTO updatedSiswa = siswaService.updateSiswa(id, siswa);
        return ResponseEntity.ok(updatedSiswa);
    }

    // ðŸ”¹ DELETE (Hapus siswa)
    @DeleteMapping("/{id}")
    public ResponseEntity<String> deleteSiswa(@PathVariable Long id) {
        logger.warn("Menghapus data siswa dengan ID: {}", id);
        siswaService.deleteSiswa(id);
        return ResponseEntity.ok("Siswa dengan ID " + id + " berhasil dihapus");
    }

    // ðŸ”¹ POST (Menambahkan mapel ke siswa)
    @PostMapping("/{siswaId}/mapel/{mapelId}")
    public ResponseEntity<SiswaDTO> addMapelToSiswa(@PathVariable Long siswaId, @PathVariable Long mapelId) {
        logger.info("Menambahkan mata pelajaran ID {} ke siswa ID {}", mapelId, siswaId);
        SiswaDTO siswa = siswaService.addMapelToSiswa(siswaId, mapelId);
        return ResponseEntity.ok(siswa);
    }
}
